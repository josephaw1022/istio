{{- if .Values.runDeletePodJob }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-manager-sa
  namespace: istio-ingress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: istio-ingress
  name: pod-management-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-management-rolebinding
  namespace: istio-ingress
subjects:
  - kind: ServiceAccount
    name: pod-manager-sa
    namespace: istio-ingress
roleRef:
  kind: Role
  name: pod-management-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: delete-auto-pod
spec:
  backoffLimit: 4
  template:
    spec:
      serviceAccountName: pod-manager-sa
      restartPolicy: Never
      containers:
        - name: delete-pod
          image: bitnami/kubectl:latest
          command:
            - /bin/sh
            - -c
            - |
              echo "Waiting for 20 seconds before deleting pod..."
              sleep 20
              echo "Deleting pod..."
              kubectl delete pod $(kubectl get pods -n istio-ingress -l app=istio-ingress -o jsonpath='{.items[0].metadata.name}') -n istio-ingress
{{- end }}
